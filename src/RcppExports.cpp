// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// g_cpp
NumericVector g_cpp(NumericVector x, double n0, double a, double b, double eps);
RcppExport SEXP _twbfn_g_cpp(SEXP xSEXP, SEXP n0SEXP, SEXP aSEXP, SEXP bSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type n0(n0SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(g_cpp(x, n0, a, b, eps));
    return rcpp_result_gen;
END_RCPP
}
// lambda_obj_cpp
double lambda_obj_cpp(double l, double n0, double a, double b, double eps, int mx);
RcppExport SEXP _twbfn_lambda_obj_cpp(SEXP lSEXP, SEXP n0SEXP, SEXP aSEXP, SEXP bSEXP, SEXP epsSEXP, SEXP mxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    Rcpp::traits::input_parameter< double >::type n0(n0SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type mx(mxSEXP);
    rcpp_result_gen = Rcpp::wrap(lambda_obj_cpp(l, n0, a, b, eps, mx));
    return rcpp_result_gen;
END_RCPP
}
// lambda_obj_adj_cpp
double lambda_obj_adj_cpp(double l, double n0, double a, double b, double eps, int mx);
RcppExport SEXP _twbfn_lambda_obj_adj_cpp(SEXP lSEXP, SEXP n0SEXP, SEXP aSEXP, SEXP bSEXP, SEXP epsSEXP, SEXP mxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    Rcpp::traits::input_parameter< double >::type n0(n0SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type mx(mxSEXP);
    rcpp_result_gen = Rcpp::wrap(lambda_obj_adj_cpp(l, n0, a, b, eps, mx));
    return rcpp_result_gen;
END_RCPP
}
// find_lambda_cpp
double find_lambda_cpp(double n0, double a, double b, double eps);
RcppExport SEXP _twbfn_find_lambda_cpp(SEXP n0SEXP, SEXP aSEXP, SEXP bSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type n0(n0SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(find_lambda_cpp(n0, a, b, eps));
    return rcpp_result_gen;
END_RCPP
}
// dgpa_cpp
double dgpa_cpp(int x, double n0, double a, double b, double eps, double lambda, bool logd);
RcppExport SEXP _twbfn_dgpa_cpp(SEXP xSEXP, SEXP n0SEXP, SEXP aSEXP, SEXP bSEXP, SEXP epsSEXP, SEXP lambdaSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type n0(n0SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dgpa_cpp(x, n0, a, b, eps, lambda, logd));
    return rcpp_result_gen;
END_RCPP
}
// llh_cpp
double llh_cpp(NumericMatrix data, double lambda, double a, double b, double n0, double eps);
RcppExport SEXP _twbfn_llh_cpp(SEXP dataSEXP, SEXP lambdaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP n0SEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type n0(n0SEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(llh_cpp(data, lambda, a, b, n0, eps));
    return rcpp_result_gen;
END_RCPP
}
// joint_prior_cpp
double joint_prior_cpp(double a, double b, double n0);
RcppExport SEXP _twbfn_joint_prior_cpp(SEXP aSEXP, SEXP bSEXP, SEXP n0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type n0(n0SEXP);
    rcpp_result_gen = Rcpp::wrap(joint_prior_cpp(a, b, n0));
    return rcpp_result_gen;
END_RCPP
}
// joint_post_cpp
double joint_post_cpp(NumericMatrix data, double lambda, double a, double b, double n0);
RcppExport SEXP _twbfn_joint_post_cpp(SEXP dataSEXP, SEXP lambdaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP n0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type n0(n0SEXP);
    rcpp_result_gen = Rcpp::wrap(joint_post_cpp(data, lambda, a, b, n0));
    return rcpp_result_gen;
END_RCPP
}
// ppa_mcmc
List ppa_mcmc(NumericMatrix data, double init_n0, double init_a, double init_b, double init_lambda, int n_iter, double a_sd, double b_sd, double n0_sd, int adapt_interval, double target_accept_rate, double adapt_factor);
RcppExport SEXP _twbfn_ppa_mcmc(SEXP dataSEXP, SEXP init_n0SEXP, SEXP init_aSEXP, SEXP init_bSEXP, SEXP init_lambdaSEXP, SEXP n_iterSEXP, SEXP a_sdSEXP, SEXP b_sdSEXP, SEXP n0_sdSEXP, SEXP adapt_intervalSEXP, SEXP target_accept_rateSEXP, SEXP adapt_factorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type init_n0(init_n0SEXP);
    Rcpp::traits::input_parameter< double >::type init_a(init_aSEXP);
    Rcpp::traits::input_parameter< double >::type init_b(init_bSEXP);
    Rcpp::traits::input_parameter< double >::type init_lambda(init_lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type n_iter(n_iterSEXP);
    Rcpp::traits::input_parameter< double >::type a_sd(a_sdSEXP);
    Rcpp::traits::input_parameter< double >::type b_sd(b_sdSEXP);
    Rcpp::traits::input_parameter< double >::type n0_sd(n0_sdSEXP);
    Rcpp::traits::input_parameter< int >::type adapt_interval(adapt_intervalSEXP);
    Rcpp::traits::input_parameter< double >::type target_accept_rate(target_accept_rateSEXP);
    Rcpp::traits::input_parameter< double >::type adapt_factor(adapt_factorSEXP);
    rcpp_result_gen = Rcpp::wrap(ppa_mcmc(data, init_n0, init_a, init_b, init_lambda, n_iter, a_sd, b_sd, n0_sd, adapt_interval, target_accept_rate, adapt_factor));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_twbfn_g_cpp", (DL_FUNC) &_twbfn_g_cpp, 5},
    {"_twbfn_lambda_obj_cpp", (DL_FUNC) &_twbfn_lambda_obj_cpp, 6},
    {"_twbfn_lambda_obj_adj_cpp", (DL_FUNC) &_twbfn_lambda_obj_adj_cpp, 6},
    {"_twbfn_find_lambda_cpp", (DL_FUNC) &_twbfn_find_lambda_cpp, 4},
    {"_twbfn_dgpa_cpp", (DL_FUNC) &_twbfn_dgpa_cpp, 7},
    {"_twbfn_llh_cpp", (DL_FUNC) &_twbfn_llh_cpp, 6},
    {"_twbfn_joint_prior_cpp", (DL_FUNC) &_twbfn_joint_prior_cpp, 3},
    {"_twbfn_joint_post_cpp", (DL_FUNC) &_twbfn_joint_post_cpp, 5},
    {"_twbfn_ppa_mcmc", (DL_FUNC) &_twbfn_ppa_mcmc, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_twbfn(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
